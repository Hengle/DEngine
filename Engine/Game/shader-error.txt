0(54) : error C1008: undefined variable "tex"



					#version 330 core

					out vec4 color;

					in vec4 RT0;
					in vec4 RT1;
					in vec4 RT2;
				    //in vec2 tex;

					uniform vec3 g_engineLightDir;
					uniform vec4 g_engineLightColor;

					uniform vec4 g_engineCameraPos;

					uniform float gloss;
					uniform float specular;

					//uniform sampler2D shaderTexture;
					//uniform sampler2D bumpTexture;

					vec3 GetViewDir(vec3 worldPos) {
						vec3 viewdir;
						if(g_engineCameraPos.w == 0.0) {
							viewdir = -g_engineCameraPos.xyz;
						}else{
							viewdir = normalize(g_engineCameraPos.xyz - worldPos);
						}
						return viewdir;
					}

					void main(){
					    //color = texture(shaderTexture, tex);
					    //vec3 rnormal = texture(bumpTexture, tex).rgb;

					    //color.rgb*=rnormal;

					    // rnormal = rnormal * 2.0 - 1.0;

					    // vec3 worldPos = vec3(RT0.w,RT1.w,RT2.w);
				    	// vec3 worldNormal = vec3(dot(RT0.xyz, rnormal), dot(RT1.xyz, rnormal), dot(RT2.xyz, rnormal));
					    // //color = vec4(uv,0.0,1.0);

					    // float ndl = max(0.0, dot(worldNormal, -g_engineLightDir));
					    // //float ndl = dot(worldNormal, g_engineLightDir)*0.5+0.5;

					    // vec3 h = normalize(GetViewDir(worldPos) - g_engineLightDir);

					    // float ndh = max(0.0, dot(worldNormal, h));

					    // //color.rgb = color.rgb * ndl;
					    // color.rgb =  color.rgb * ndl + vec3(1.0,1.0,1.0)*pow(ndh,specular*128.0)*gloss;
					     color.a = 1.0;
					     color.rgb = vec3(RT0.x, RT1.x, RT2.x)*tex.x;
					    //color.rgb = vec3(uv,worldNormal.x);

					}
				
